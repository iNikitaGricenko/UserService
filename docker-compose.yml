version: "3.7"
services:
  # Start Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-cqrs
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - default
  # End Zookeeper

  # Start Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-cqrs
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-cqrs:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-cqrs:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - default
  # End Kafka

  # Start Mysql
  mysql:
    image: mysql
    container_name: mysql-cqrs
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=user-read
    ports:
      - "3306:3306"
    networks:
      - mysql-cqrs
  # End Mysql

  # Start Mongo
  mongodb:
    image: mongo
    container_name: mongo-cqrs
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    networks:
      - mongo-cqrs
  mongo-express:
    image: mongo-express
    container_name: mongo-express-cqrs
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongo-cqrs
    depends_on:
      - mongodb
    networks:
      - mongo-cqrs
  # End Mongo

  # Start Services
  user-write-service:
    container_name: user-write-service
    build:
      context: ./UserCommand/
      dockerfile: Dockerfile-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - EVENT_USER_TOPIC=user-events
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_HOST=mongo-cqrs
      - SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE=admin
      - SPRING_DATA_MONGODB_USERNAME=rootuser
      - SPRING_DATA_MONGODB_PASSWORD=rootpass
      - SPRING_DATA_MONGODB_DATABASE=users
      - SPRING_JPA_HIBERNATE_DLL-AUTO=create
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-cqrs:9092
    depends_on:
      - mongodb
    networks:
      - mongo-cqrs
      - default

  user-read-service:
    container_name: user-read-service
    build:
      context: ./UserQuery/
      dockerfile: Dockerfile-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - EVENT_USER_TOPIC=user-events
      - SPRING_JPA_HIBERNATE_DLL-AUTO=create
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-cqrs:3306/user-read
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-cqrs:9092
    depends_on:
      - mysql
    networks:
      - mysql-cqrs
      - default
# End Services

volumes:
  data: {}
networks:
  default: {}
  mysql-cqrs:
    name: mysql
  mongo-cqrs:
    name: mongo-cqrs_network
